<div id="fb-root"></div>
<script>
var authToken = "";
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    authToken = response.authResponse.accessToken;
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '<%= FB_APP_ID %>',
    cookie     : true,  // enable cookies to allow the server to access
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.2' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';

      $.get('/fb-pic', {fn: $('#grid-modal img').attr('src'), token: authToken}, function() {
        FB.logout(function(r){
          $('#grid-modal').css('display', 'none');
          authToken = '';
        });
      });
    });
  }
</script>

<div id="grid-head">
    <h1>Photobooth!</h1>
    <p>Click a photo to email it to someone!</p>
    <p id="status"></p>
  </div>

  <ul id="grid">
    <% PhotoList.each do |fn| %>
      <li><img src="/drop/<%= fn %>r"></img></li>
    <% end %>
  </ul>

  <div id="grid-modal">
	  <div class="img-box box">
		  <img src="" />
	  </div>
	  <div class="mail-box box">
		  Send via email: <input id="mail-address" type="text"></input> <button id="mail-send">Send</button>
	  </div>
	  <div class="fb-box box">
		  Share on Facebook: <fb:login-button scope="public_profile,publish_actions" onlogin="checkLoginState();"></fb:login-button>
	  </div>
	  <div class="grid-close box">
		  <button id="grid-x">Close</button>
	  </div>
  </div>
  <script type="text/javascript">
    var client = new Faye.Client('http://localhost:9292/faye')
    client.subscribe('/new', function(message){
      $('#grid').append('<li><img src="/drop/' + message.name + 'r"></img></li>');
    });

    client.subscribe('/delete', function(message){
      $('img[src*="' + message.name + '"]').parent()[0].remove();
    });

$("#grid").on('click', 'img', function() {
      src = $(this).attr('src');
	/*
      addr = prompt('Who should I email this to?');
      if(addr) {
        $.post('/sendto', {src: src.substring(0,src.length - 1), addr: addr});
        alert("OK!");
	}*/

      $('#grid-modal img').attr('src', src);
     $('#grid-modal').css('display', 'flex');

});
$("#grid-x").click(function() {
     $('#grid-modal').css('display', 'none');
});
  </script>
